<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.bookiescrape.app</groupId>
  <artifactId>bookie-scrape</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>bookie-scrape</name>
  <url>https://github.com/jhenly/bookie-scrape</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>12</maven.compiler.source>
    <maven.compiler.target>12</maven.compiler.target>
  </properties>

  <!-- Good Maven Repository Site: https://mvnrepository.com -->
  
  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <version>2.44.0</version>
      <scope>compile</scope>
    </dependency>

    <!-- Begin Apache POI Dependencies -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>4.1.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml-schemas</artifactId>
      <version>4.1.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-scratchpad</artifactId>
      <version>4.1.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-excelant</artifactId>
      <version>4.1.2</version>
      <scope>compile</scope>
    </dependency>
    <!-- End Apache POI Dependencies -->

    <!-- Begin OpenJFX Dependencies -->
    <dependency>
      <groupId>com.jfoenix</groupId>
      <artifactId>jfoenix</artifactId>
      <version>9.0.10</version>
      <scope>compile</scope>
    </dependency>
    
    <!-- FontAwesomeFX dependencies -->
    <dependency>
      <groupId>de.jensd</groupId>
      <artifactId>fontawesomefx-fontawesome</artifactId>
      <version>4.7.0-9.1.2</version>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>16-ea+4</version>
      <scope>compile</scope>
    </dependency>
    <!-- End OpenJFX Dependencies -->

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven 
        defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>


        <!-- allows for 'clean javafx:run' -->
        <plugin>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.5</version>
          <configuration>
          
            <!-- Used to specify absolute path to JDK's java executable,
                 i.e. "/absolute/path/to/jdk-#.#.#/bin/java", if Maven throws errors
                 because it can't find it. -->
	    <!-- <executable>E:\\Programming\\Java\\jdk-15.0.1\\bin\\java</executable> -->
            
            <!-- used to test different 'public static void main(String[] args)' classes without changing pom.xml -->   
            <!-- via: 'clean javafx:run "-Dpackage.main=sample.Main"' -->
            <mainClass>com.bookiescrape.app.${foo}</mainClass>
            
          </configuration>
        </plugin>
         
        <!-- allows for 'mvn java:exec' and for 'mvn exec:exec' -->
        <!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
          <version>3.0.0</version> <configuration> <mainClass>com.sportsbookscraper.app.sample.Mediator</mainClass> 
          <arguments> <argument>-jar</argument> <argument>target/sports-book-scraper-1.0-SNAPSHOT.jar</argument> 
          </arguments> </configuration> </plugin> -->

      </plugins>
    </pluginManagement>
  </build>
</project>
